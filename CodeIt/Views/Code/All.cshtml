@model IEnumerable<CodeIt.Models.AllCodesModel>

@{ 
    ViewBag.Title = "All Pastes";
}

<h2 class="text-center">Codes - Page @ViewBag.CurrentPage</h2>


@if (!Model.Any())
{
    <h1 class="text-center">No more codes!</h1>
}
@using (Html.BeginForm("All", "Code", FormMethod.Get))
{
    if (Request.QueryString["user"] != null)
    {
        @Html.Hidden("user", Request.QueryString["user"]);
    }
    <div class="text-center" mt-60>
        <input type="text" class="form-control" name="search" style="display: inline-block" value="@Request.QueryString["search"]" />
        <input type="submit" value="Search" class="btn btn-default" />
    </div>
}


@foreach (var code in Model)
{
    <div>
        <div class="space10"></div>

        <h1>@code.CodeTitle</h1>
        <h3>@code.Author</h3>
        <h4>@code.TimeCreated</h4>

        @{
            var currUserQuery1 = Request.QueryString["user"];

        }


        <a href="/Code/Details/@code.Id?pPage=@ViewBag.CurrentPage@(currUserQuery1 != null ? "&myUser=" + currUserQuery1 : string.Empty)" class="btn btn-info">See more >></a>
    </div>

            

<hr class="lyne" />

}


<div class="space20"></div>

@{
    var currUser = Request.QueryString["user"];
    var currentSearch = Request.QueryString["search"];

    var currUserQuery = currUser != null ? "&user=" + currUser : string.Empty;
    var currSearchQuery = currentSearch != null ? "&user=" + currentSearch : string.Empty;
}

<p class="text-center">
    <a href="/Code/All?page=@(ViewBag.CurrentPage-1)@currUserQuery@currSearchQuery" class="btn btn-success" @(ViewBag.CurrentPage == 1 ? "disabled" : string.Empty)> << Prev </a>

    <a href="/Code/All?page=@(ViewBag.CurrentPage+1)@currUserQuery@currSearchQuery" class="btn btn-success" @((!Model.Any() || Model.Count()<10) ? "disabled" : string.Empty)> Next >> </a>

</p>